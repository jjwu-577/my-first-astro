---
import BaseLayout from "@layouts/BaseLayout.astro";
const pageTitle = "Home Page1";
---

<BaseLayout pageTitle={pageTitle}>
  <!-- <h2>My awesome blog subtitle</h2>
  <Greeting client:load messages={["Hi", "Hello", "Howdy", "Hey there"]} /> -->
  <div class="section1">
    <div class="imgs">
      <div class="img img1"></div>
      <div class="img img2"></div>
      <div class="img img3"></div>
    </div>
    <div class="blacksticky">
      <svg
        width="800"
        height="180"
        viewBox="0 0 800 180"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_3252_33019)">
          <path
            d="M177.66 0H126.473L89.358 52.7705L52.0668 0H0.879507L63.6763 89.0062L0 179.244H51.1873L89.358 125.242L127.529 179.244H178.54L114.864 89.0062L177.66 0Z"
            fill="#FF3300"></path>
          <path
            d="M352.68 179.244H484.782V137.907H394.017V107.124H476.69V71.7678H394.017V41.3369H484.782V0H352.68V179.244Z"
            fill="#FF3300"></path>
          <path
            d="M721.548 137.907V0H680.211V179.244H800V137.907H721.548Z"
            fill="#FF3300"></path>
          <path
            d="M557.607 0L492.875 179.244H537.202L545.294 156.552H619.348L627.44 179.244H671.767L607.387 0H557.607ZM558.134 121.372L582.409 53.65L606.859 121.372H558.134Z"
            fill="#FF3300"></path>
          <path
            d="M335.969 71.0642C336.497 67.7221 336.673 64.2041 336.673 60.686C336.673 57.168 336.497 53.65 335.969 50.3078C331.923 21.2841 307.121 0.703606 277.746 0C276.514 0 274.052 0 272.821 0H186.981H186.805V179.244H228.142V121.196H252.064L293.577 179.244H344.764L300.261 116.799C318.731 109.235 333.155 92.1724 335.969 71.0642ZM295.512 62.445C294.984 72.1196 286.717 79.6834 277.042 79.6834H235.354H228.142V41.3369H235.354H277.042C286.893 41.3369 294.984 48.9006 295.512 58.5752C295.512 59.2788 295.512 59.8065 295.512 60.5101C295.512 61.2137 295.512 61.9173 295.512 62.445Z"
            fill="#FF3300"></path>
        </g>
        <defs>
          <clipPath id="clip0_3252_33019">
            <rect width="800" height="179.244" fill="white"></rect>
          </clipPath>
        </defs>
      </svg>
    </div>
  </div>
  <div class="section2"></div>
</BaseLayout>

<style>
  .section1 {
    width: 100vw;
    position: relative;
    height: 180vh;
    background-image: url("/src/assets/images/man/KV-Layer-BG.jpg");
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
  }
  .imgs {
    position: sticky;
    top: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
  }
  .imgs .img {
    position: absolute;
    width: 100%;
    height: 100%;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    object-position: center top;
    left: 50%;
    transform: translateX(-50%);
  }
  .img1 {
    background-image: url("/src/assets/images/man/KV-Layer-X.png");
    top: 200px;
    height: 120vh !important;
  }
  .img2 {
    background-image: url("/src/assets/images/man/KV-Layer-MAN-2.png");
    top: 240px;
    height: 160vh !important;
    width: 120% !important;
  }
  @media screen and(max-width:768px) {
    .img1 {
      top: 60px;
      object-fit: contain;
    }
    .img2 {
      top: 100px;
    }
  }
  .img3 {
    background-image: url("/src/assets/images/man/KV-Layer-SMOKE.png");
    top: 0;
  }

  .blacksticky {
    position: sticky;
    width: 100vw;
    margin-top: 10%;
    height: 50vh;
    z-index: 4;
    top: 50vh;
  }
  .blacksticky svg {
    position: absolute;
    height: 20%;
    top: -10%;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    max-width: 80%;
    padding: 0 30px;
  }

  .section2 {
    width: 100vw;
    height: 100vh;
    background-color: aqua;
    z-index: 1;
    position: relative;
  }
</style>

<script is:inline>
  // 减少重复的dom查询
  const img1 = document.querySelector(".img1");
  const img2 = document.querySelector(".img2");
  const vh = window.innerHeight;
  const contentPX = vh * 1.8; //获取滚动距离 确保滚动完的时候黑人才滚走
  const img2PX = vh * 0.6;
  const img1PX = vh * 0.2;

  function handleScroll() {
    // requestAnimationFrame 可以将其与浏览器的绘制过程同步，避免不必要的样式计算和重绘
    requestAnimationFrame(parallaxScroll);
  }
  window.addEventListener("scroll", handleScroll);
  function parallaxScroll() {
    //获取滚动距离
    const scrolled = window.pageYOffset || document.documentElement.scrollTop;
    // 计算位置，并设置样式
    img1.style.top =
      window.innerWidth > 768
        ? `${200 - (scrolled / contentPX) * (200 + img1PX)}px`
        : `${60 - (scrolled / contentPX) * (60 + img1PX)}px`;
    img2.style.top =
      window.innerWidth > 768
        ? `${240 - (scrolled / contentPX) * (240 + img2PX)}px`
        : `${100 - (scrolled / contentPX) * (100 + img2PX)}px`;
  }
</script>
